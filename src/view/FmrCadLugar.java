package view;

import dao.Conexao;
import entidade.Lugar;
import java.awt.AlphaComposite;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import util.TableModel;

public class FmrCadLugar extends javax.swing.JDialog {

    private File imagem;
    private boolean edicao = false; // flag se é uma edição ou se é para o novo registro
    private Lugar lugar;
    //private Conexao conexao = new Conexao();
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FmrCadLugar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FmrCadLugar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FmrCadLugar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FmrCadLugar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FmrCadLugar dialog = new FmrCadLugar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Metodo para preencher os dados se for para Alteração
    /*public void preencheDados(int idLugar){
        Lugar lugar = new Lugar();
        Conexao con = new Conexao();
        boolean retorno = con.conectarDB();
        
        if (retorno) {
            lugar = con.BuscarLugarPorID(idLugar);
            if (lugar != null){
                txtNome.setText(lugar.getNome());
            }
        }        
        edicao = true;        
    }*/

    /**
      * Creates new form fmrCadLugar
     */
    public FmrCadLugar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtDescricao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cboZona = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtSite = new javax.swing.JTextField();
        panelBanner = new javax.swing.JPanel();
        lblBanner = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnBuscaImg = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        painelImg = new javax.swing.JPanel();
        lblImagem = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cboCategoria = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(txtDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 420, 90));

        jLabel1.setText("Descrição do Lugar");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, 20));

        jLabel2.setText("Endereço");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));
        jPanel1.add(txtEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 420, 30));

        jLabel3.setText("Localização");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, -1, -1));

        cboZona.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CENTRO", "ZL", "ZN", "ZO", "ZS" }));
        jPanel1.add(cboZona, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, 130, 30));

        jLabel4.setText("Site");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));
        jPanel1.add(txtSite, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 420, 30));

        panelBanner.setBackground(new java.awt.Color(102, 102, 255));

        lblBanner.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblBanner.setForeground(new java.awt.Color(255, 255, 255));
        lblBanner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBanner.setText("CADASTRO DE LUGARES");

        javax.swing.GroupLayout panelBannerLayout = new javax.swing.GroupLayout(panelBanner);
        panelBanner.setLayout(panelBannerLayout);
        panelBannerLayout.setHorizontalGroup(
            panelBannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBannerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBanner, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelBannerLayout.setVerticalGroup(
            panelBannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBannerLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblBanner)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel1.add(panelBanner, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 100));

        btnSalvar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salvar.png"))); // NOI18N
        btnSalvar.setText("SALVAR");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-exit-30.png"))); // NOI18N
        btnSair.setText("CANCELAR");
        btnSair.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(574, Short.MAX_VALUE)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, 900, 80));

        btnBuscaImg.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnBuscaImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        btnBuscaImg.setText("BUSCAR");
        btnBuscaImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaImgActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscaImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 390, 120, 40));

        jLabel6.setText("Nome do Lugar");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, 20));
        jPanel1.add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 420, 30));

        painelImg.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImagem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout painelImgLayout = new javax.swing.GroupLayout(painelImg);
        painelImg.setLayout(painelImgLayout);
        painelImgLayout.setHorizontalGroup(
            painelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
        );
        painelImgLayout.setVerticalGroup(
            painelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
        );

        jPanel1.add(painelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 430, 260));

        jLabel5.setText("ID");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        txtID.setEditable(false);
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 124, 120, 30));

        jLabel7.setText("Categoria");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));

        cboCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RESTAURANTES", "ROLES", "CINEMAS", "EVENTOS" }));
        jPanel1.add(cboCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 160, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(926, 696));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    
   
    
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        Conexao conexao = new Conexao();
        Boolean retorno = conexao.conectarDB();
        Lugar lugar = new Lugar();
        
        if (retorno) { // Valida se a conexão com o banco foi estabelecida !
            if (edicao) {
                lugar.setIdLugar    (Integer.parseInt(txtID.getText()));
                lugar.setNome       (txtNome.getText());
                lugar.setEndereco   (txtEndereco.getText());
                lugar.setDescricao  (txtDescricao.getText());
                lugar.setCategoria  (cboCategoria.getSelectedItem().toString());
                lugar.setZona       (cboZona.getSelectedItem().toString());
                lugar.setSite       (txtSite.getText());
                lugar.setImg        (getImagem());                    
                
                
                Boolean retornoAlterar = conexao.alterar(lugar);
                if (retornoAlterar){
                    JOptionPane.showMessageDialog(null,"Registro Alterado com sucesso !");
                    edicao = false;
                    dispose();
                }else {
                    JOptionPane.showMessageDialog(this,"Erro ao Alterar um novo Registro !");
                }
                

            }else {
                lugar.setNome       (txtNome.getText());
                lugar.setEndereco   (txtEndereco.getText());
                lugar.setDescricao  (txtDescricao.getText());
                lugar.setCategoria  (cboCategoria.getSelectedItem().toString());
                lugar.setZona       (cboZona.getSelectedItem().toString());
                lugar.setSite       (txtSite.getText());
                lugar.setImg        (getImagem());

                Boolean retornoInserir = conexao.inserir(lugar);                
                if (retornoInserir){ // Valida se realmente foi inserido no banco
                    JOptionPane.showMessageDialog(this,"Novo lugar salvo com sucesso !");
                    dispose();
                }else {
                    JOptionPane.showMessageDialog(this,"Erro ao Inserir um novo Registro !");
                }
            }     
        } else {
            JOptionPane.showMessageDialog(this,"Erro na conexão com o Banco de Dados Parsa !");
        }
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnBuscaImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaImgActionPerformed
        imagem = selecionarImagem(); // recebe a imagem selecionada.
        abreImagem(imagem); // Mostra a imagem no Painel atravez da lblImagem 
        
        
    }//GEN-LAST:event_btnBuscaImgActionPerformed

    public File selecionarImagem() {
        JFileChooser arquivo = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Imagens em JPEG e PNG", "jpg", "png");
        arquivo.addChoosableFileFilter(filtro);
        arquivo.setAcceptAllFileFilterUsed(false); // aceita somente arquivo jpg e png
        arquivo.setDialogType(JFileChooser.OPEN_DIALOG);
        arquivo.setCurrentDirectory(new File ("c:\\%userprofile%\"\\"));
        arquivo.showOpenDialog(this);
        
        return arquivo.getSelectedFile();
    }
    
    private byte[] getImagem() {
        boolean isPng = false;
        
        if (imagem != null) {
            isPng = imagem.getName().endsWith("png");
            // Convertendo a imagem para bytes para poder salvar no Conexao
            try {
                BufferedImage img = ImageIO.read(imagem);
                ByteArrayOutputStream out = new ByteArrayOutputStream();
                int type = BufferedImage.TYPE_INT_RGB;
                
                if (isPng) {
                    type = BufferedImage.BITMASK;
                }
                
                // -5 e -10 é um ajuste para a imagem n ficar maior que o painel 
                BufferedImage novaImagem = new BufferedImage(painelImg.getWidth() -5 , painelImg.getHeight() - 10, type);
                Graphics2D g = novaImagem.createGraphics();
                g.setComposite(AlphaComposite.Src);
                g.drawImage(img, 0, 0, painelImg.getWidth() - 5, painelImg.getHeight() - 10, null);
                
                if (isPng) {
                    ImageIO.write(novaImagem, "png", out);
                }else{
                    ImageIO.write(novaImagem, "jpg", out);
                }
                
                out.flush();
                byte[] byteArray = out.toByteArray();
                out.close();
                
                return byteArray;
                
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        return null;
    }
    
    /*private void popularCampos() {
        txtNome.setText(lugar.getNome());
        txtEndereco.setText(lugar.getEndereco());
        txtDescricao.setText(lugar.getDescricao());
        cboZona.setSelectedItem(lugar.getZona());
        txtSite.setText(lugar.getSite());
        
    }*/
    
    private void abreImagem (Object origem) {
        if (origem instanceof File) {
            ImageIcon icon = new ImageIcon(imagem.getAbsolutePath());
            icon.setImage(icon.getImage().getScaledInstance(painelImg.getWidth() - 5, painelImg.getHeight()-10, 100));
            lblImagem.setIcon(icon);
        } 
        else if (origem instanceof byte[]) {
            ImageIcon icon = new ImageIcon(lugar.getImg());
            icon.setImage(icon.getImage().getScaledInstance(painelImg.getWidth() - 5, painelImg.getHeight()-10, 100));
            lblImagem.setIcon(icon);
        }
    }
    
    public void pegaID(Lugar idLugar){
        if (idLugar != null) {
            lblBanner.setText("ALTERANDO LUGAR");
            txtID.setText(String.valueOf(idLugar.getIdLugar()));
            buscarPorID();           
        }else {
            JOptionPane.showMessageDialog(null, "Erro em chamar o forme para alteração");
        }
    }
    
    public void buscarPorID(){
        Conexao conexao = new Conexao();
        Lugar lugar = new Lugar();        
        int id = Integer.parseInt(txtID.getText());
        Boolean returno = conexao.conectarDB();
        
            if (returno){
                lugar = conexao.consultarPorID(id);
                if (lugar != null){
                    txtNome.setText(lugar.getNome());
                    txtEndereco.setText(lugar.getEndereco());
                    cboCategoria.setSelectedItem(lugar.getCategoria());
                    cboZona.setSelectedItem(lugar.getZona());
                    txtSite.setText(lugar.getSite());
                    txtDescricao.setText(lugar.getDescricao());
                    
                    if (lugar.getImg() != null) {
                        ImageIcon icone = new ImageIcon(lugar.getImg());
                        icone.setImage(icone.getImage().getScaledInstance(painelImg.getWidth() - 5, painelImg.getHeight()-10, 100));
                        lblImagem.setIcon(icone);
                    } else {
                        lblImagem.setText("Não Há Imagem Disponivel!");
                    }
                
                    edicao = true;           
                } else {
                    JOptionPane.showMessageDialog(null,"não encontrado");
                }
               
            }else {
                JOptionPane.showMessageDialog(null, "Erro na Conexão");
            }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscaImg;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cboCategoria;
    private javax.swing.JComboBox<String> cboZona;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblBanner;
    private javax.swing.JLabel lblImagem;
    private javax.swing.JPanel painelImg;
    private javax.swing.JPanel panelBanner;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtSite;
    // End of variables declaration//GEN-END:variables
}
